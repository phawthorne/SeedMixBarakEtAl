var documenterSearchIndex = {"docs":
[{"location":"tool/#Data-visualization-tool","page":"Tool","title":"Data visualization tool","text":"","category":"section"},{"location":"tool/","page":"Tool","title":"Tool","text":"Our principle aim with this computational approach to seed mix design is to improve realized ecological benefits of restoration projects using mixes that produce a range of ecological benefits cost-effectively. In order to get these mixes into the hands of restoration specialists, we are developing a decision-support tool that makes this approach accessible and customizable.","category":"page"},{"location":"tool/","page":"Tool","title":"Tool","text":"The full tool combines optimization with a \"build-a-mix\" approach that allows users to customize mixes, either built completely by the user, or by selecting optimized mixes as a starting point and modifying them to fit local conditions or project needs.","category":"page"},{"location":"tool/","page":"Tool","title":"Tool","text":"Here, we provide a demonstration of the optimized mix browser. This demo illustrates browsing through thousands of optimization outputs to identify mixes that meet desired criteria.","category":"page"},{"location":"tool/","page":"Tool","title":"Tool","text":"(Image: Cropped tool screenshot)","category":"page"},{"location":"tool/#Demo-documentation","page":"Tool","title":"Demo documentation","text":"","category":"section"},{"location":"tool/#Mix-pool-objective-values","page":"Tool","title":"Mix pool objective values","text":"","category":"section"},{"location":"tool/","page":"Tool","title":"Tool","text":"The main panel consists of a scatter plot that shows objective values for every mix in the 25 species, 2500 max cost run of the optimization. Controls for x- and y-axis allow the user to switch which objective scores are shown. The user can click on a mix to select it.","category":"page"},{"location":"tool/#Filters","page":"Tool","title":"Filters","text":"","category":"section"},{"location":"tool/","page":"Tool","title":"Tool","text":"Filters allow the user to specify acceptable ranges for each of the objectives, which are reflected in the main  scatter plot by graying out unacceptable mixes.","category":"page"},{"location":"tool/#Selected-mix-reports","page":"Tool","title":"Selected mix reports","text":"","category":"section"},{"location":"tool/","page":"Tool","title":"Tool","text":"Once a mix is selected, mix-specific report panels are populated:","category":"page"},{"location":"tool/","page":"Tool","title":"Tool","text":"A \"relative scores\" graphic shows objective values for the selected mix, normalized to a scale of 0-1, ","category":"page"},{"location":"tool/","page":"Tool","title":"Tool","text":"where 0 corresponds to the lowest value for that objective across all optimized mixes, and 1 corresponds to the highest.","category":"page"},{"location":"tool/","page":"Tool","title":"Tool","text":"A table lists the species included in the selected mix, and the quantity of each species, rounded to the nearest ounce.","category":"page"},{"location":"tool/#Summary","page":"Tool","title":"Summary","text":"","category":"section"},{"location":"tool/","page":"Tool","title":"Tool","text":"These various interfaces allow the user to explore the large pool of mixes to better understand patterns of tradeoffs between different objectives, and to identify mixes meeting particular criteria. The larger tool under development allows the user to export mixes of interest to their account, where they can edit them by adjusting seed weight for included species, or by adding/removing species, and seeing how these changes affect the objective values with live updating.","category":"page"},{"location":"usage/#Usage","page":"Usage","title":"Usage","text":"","category":"section"},{"location":"usage/#Running-an-optimization","page":"Usage","title":"Running an optimization","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"The main way to run the code is through the scripts/multistart.jl script, which  loads the appropriate data and executes an optimization run. The script must be called through the command line from the scripts folder:","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"% cd [..]SeedMixBarakEtAl/scripts\n% julia multistart.jl","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"This will initiate a run of the optimization with default arguments. In order to customize the analysis, additional command line arguments can be specified.","category":"page"},{"location":"usage/#multistart.jl-arguments","page":"Usage","title":"multistart.jl arguments","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"The available arguments are:","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"\"-n\"\n    help = \"number of species in the mix\"\n    arg_type = Int64\n    default = 25\n\"-W\"\n    help = \"total weight of the mix\"\n    arg_type = Float64\n    default = 10.0\n\"-w\"\n    help = \"minimum weight of each species\"\n    arg_type = Float64\n    default = 1.0/16.0\n\"-t\"\n    help = \"number of times to run the optimization\"\n    arg_type = Int64\n    default = 1\n\"-p\"\n    help = \"number of indivs in the EA\"\n    arg_type = Int64\n    default = 100\n\"-g\"\n    help = \"number of generations in the EA\"\n    arg_type = Int64\n    default = 100\n\"-c\"\n    help = \"cost constraint (0.0 -> no constraint)\"\n    arg_type = Float64\n    default = 0.0","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"The analyses in the paper were:","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"% julia multistart.jl -t 20 -c 2500 -n 25 -p 200 -g 5000\n% julia multistart.jl -t 20 -c 2500 -n 32 -p 200 -g 5000\n% julia multistart.jl -t 20 -c 2500 -n 40 -p 200 -g 5000\n% julia multistart.jl -t 20 -c 5000 -n 25 -p 200 -g 5000\n% julia multistart.jl -t 20 -c 5000 -n 32 -p 200 -g 5000\n% julia multistart.jl -t 20 -c 5000 -n 40 -p 200 -g 5000","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"It does take a while to run with this many starts, generations, and individuals in the population, so we recommend experimenting with the default before running this size of problem. ","category":"page"},{"location":"SeedMixFunctions/#Code-documentation","page":"Code documentation","title":"Code documentation","text":"","category":"section"},{"location":"SeedMixFunctions/","page":"Code documentation","title":"Code documentation","text":"SeedMixFunctions.jl is the included package that provides the mix evaluation and GA run initiation functions. Use of these functions isn't required to  run an analysis - the file multistart.jl in the scripts folder (documented here) is the main way to run the analysis - but the functions are documented here for comprehensiveness. ","category":"page"},{"location":"SeedMixFunctions/#Data-loading-function","page":"Code documentation","title":"Data loading function","text":"","category":"section"},{"location":"SeedMixFunctions/","page":"Code documentation","title":"Code documentation","text":"SpeciesData(tablefile::String, phlofile::String)","category":"page"},{"location":"SeedMixFunctions/#SeedMixFunctions.SpeciesData-Tuple{String,String}","page":"Code documentation","title":"SeedMixFunctions.SpeciesData","text":"SpeciesData(tablefile::String, phylofile::String)\n\nReads data from tablefile and phylofile to construct the SpeciesData structure.\n\n\n\n\n\n","category":"method"},{"location":"SeedMixFunctions/#Data-types","page":"Code documentation","title":"Data types","text":"","category":"section"},{"location":"SeedMixFunctions/","page":"Code documentation","title":"Code documentation","text":"These are the structs that you need to run these analyses.","category":"page"},{"location":"SeedMixFunctions/","page":"Code documentation","title":"Code documentation","text":"SpeciesData\nMixData\nMixRequirements","category":"page"},{"location":"SeedMixFunctions/#SeedMixFunctions.SpeciesData","page":"Code documentation","title":"SeedMixFunctions.SpeciesData","text":"SpeciesData struct\n\n\n\n\n\n","category":"type"},{"location":"SeedMixFunctions/#SeedMixFunctions.MixData","page":"Code documentation","title":"SeedMixFunctions.MixData","text":"MixData struct\n\n\n\n\n\n","category":"type"},{"location":"SeedMixFunctions/#SeedMixFunctions.MixRequirements","page":"Code documentation","title":"SeedMixFunctions.MixRequirements","text":"Structure capturing requirements for each mix:\n\nnspecs::Int64\ntotalweight::Float64\nminweight::Float64\n[maxcost::Float64]\n\nNote there is an a three argument constructor that leaves out maxcost. It will set maxcost to 0.0, which is treated as no limit in the MOEA.\n\n\n\n\n\n","category":"type"},{"location":"SeedMixFunctions/#GA-functions","page":"Code documentation","title":"GA functions","text":"","category":"section"},{"location":"SeedMixFunctions/","page":"Code documentation","title":"Code documentation","text":"Functions to run or post-process runs of the GA","category":"page"},{"location":"SeedMixFunctions/","page":"Code documentation","title":"Code documentation","text":"RunParams\nmulti_start\ndo_run\nsave_results\npool_spec_selections","category":"page"},{"location":"SeedMixFunctions/#SeedMixFunctions.RunParams","page":"Code documentation","title":"SeedMixFunctions.RunParams","text":"Struct that defines parameters for the genetic algorithm (GA) function:\n\nnstarts::Int64  -  number of separate GA iterations to run\npopsize::Int64  -  population size for each GA run\nngens::Int64    -  number of generations to simulate in each GA run\n\n\n\n\n\n","category":"type"},{"location":"SeedMixFunctions/#SeedMixFunctions.multi_start","page":"Code documentation","title":"SeedMixFunctions.multi_start","text":"Perform a multi-start run of the GA\n\n\n\n\n\n","category":"function"},{"location":"SeedMixFunctions/#SeedMixFunctions.do_run","page":"Code documentation","title":"SeedMixFunctions.do_run","text":"Perform a single run of the GA with given data and parameters\n\n\n\n\n\n","category":"function"},{"location":"SeedMixFunctions/#SeedMixFunctions.save_results","page":"Code documentation","title":"SeedMixFunctions.save_results","text":"Writes output files for genomes, objectives, and mix details\n\n\n\n\n\n","category":"function"},{"location":"SeedMixFunctions/#SeedMixFunctions.pool_spec_selections","page":"Code documentation","title":"SeedMixFunctions.pool_spec_selections","text":"Performs union of species found in results' mixes\n\n\n\n\n\n","category":"function"},{"location":"SeedMixFunctions/#Evaluation-functions","page":"Code documentation","title":"Evaluation functions","text":"","category":"section"},{"location":"SeedMixFunctions/","page":"Code documentation","title":"Code documentation","text":"These are functions that evaluate a mix for a specific metric.","category":"page"},{"location":"SeedMixFunctions/","page":"Code documentation","title":"Code documentation","text":"get_phylo_dist(mix::MixData, sd::SpeciesData)\nget_shannon\nget_cost\nget_consval\nget_bloom\nget_grass_spec_frac\nget_grass_weight_frac","category":"page"},{"location":"SeedMixFunctions/#SeedMixFunctions.get_phylo_dist-Tuple{MixData,SpeciesData}","page":"Code documentation","title":"SeedMixFunctions.get_phylo_dist","text":"get_phylo_dist(mix::MixData, sd::SpeciesData)\n\nComputes summed pairwise phylogenetic distance.\n\n\n\n\n\n","category":"method"},{"location":"SeedMixFunctions/#SeedMixFunctions.get_shannon","page":"Code documentation","title":"SeedMixFunctions.get_shannon","text":"Calculates Shannon Diversity\n\n\n\n\n\n","category":"function"},{"location":"SeedMixFunctions/#SeedMixFunctions.get_cost","page":"Code documentation","title":"SeedMixFunctions.get_cost","text":"Calculates cost of the mix: sum of weight * cost\n\n\n\n\n\n","category":"function"},{"location":"SeedMixFunctions/#SeedMixFunctions.get_consval","page":"Code documentation","title":"SeedMixFunctions.get_consval","text":"Calculates conservatism value\n\n\n\n\n\n","category":"function"},{"location":"SeedMixFunctions/#SeedMixFunctions.get_bloom","page":"Code documentation","title":"SeedMixFunctions.get_bloom","text":"Calculates bloom index: sum of square root of # flowering species per month\n\n\n\n\n\n","category":"function"},{"location":"SeedMixFunctions/#SeedMixFunctions.get_grass_spec_frac","page":"Code documentation","title":"SeedMixFunctions.get_grass_spec_frac","text":"Calculates the fraction of mix species that are grasses\n\n\n\n\n\n","category":"function"},{"location":"SeedMixFunctions/#SeedMixFunctions.get_grass_weight_frac","page":"Code documentation","title":"SeedMixFunctions.get_grass_weight_frac","text":"Calculates the weight fraction of seeds that are grasses\n\n\n\n\n\n","category":"function"},{"location":"SeedMixFunctions/#Index","page":"Code documentation","title":"Index","text":"","category":"section"},{"location":"SeedMixFunctions/","page":"Code documentation","title":"Code documentation","text":"","category":"page"},{"location":"installation/#Installation","page":"Installation","title":"Installation","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"The core algorithms are written in the Julia language. Steps to running the code:","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"Download Julia (code was tested with Julia 1.5).\nSet up Julia to be able to call it from the command line.\nOn Mac, for example, add alias julia=\"/Applications/Julia-1.5.app/Contents/Resources/julia/bin/julia\" to your .zshrc file.\nClone this code repository using git.\nSet up the Julia environment\nNavigate to this repo's folder in the terminal\nOpen Julia in the terminal\nEnter these commands:","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"julia> include Pkg\njulia> Pkg.activate(\".\")\njulia> Pkg.instantiate()\njulia> exit()","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"Now change to the scripts directory in the terminal.\nRun the optimization script (julia multistart.jl) with desired arguments ","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"(see Usage for options)","category":"page"},{"location":"#Seed-Mix-Code","page":"Home","title":"Seed Mix Code","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for code accompanying \"Computational Seed Mix Design\" (Barak, et al. 2021).","category":"page"},{"location":"#Table-of-Contents","page":"Home","title":"Table of Contents","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Installation\nRunning an optimization\nData visualization tool\nCode documentation","category":"page"}]
}
